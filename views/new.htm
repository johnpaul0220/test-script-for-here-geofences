<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div id="map" style="width: 640px; height: 480px"></div>

    <script src="https://js.api.here.com/v3/3.1/mapsjs-core.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-core-legacy.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service-legacy.js" type="text/javascript"
        charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.hereapi.cn/v3/3.0/mapsjs-ui.js" type="text/javascript" charset="utf-8"></script>
    <link rel="stylesheet" type="text/css" href="https://js.hereapi.cn/v3/3.0/mapsjs-ui.css" />
    <script>
        const platform = new H.service.Platform({
            apikey: "IkU57xoI9YzZngVm137ZoxrhNh5H98EYVPxZhfAbvkU"
        })
        var maptypes = platform.createDefaultLayers();
        let map = new H.Map(
            document.getElementById("map"),
            maptypes.vector.normal.map,
            {
                zoom: 15,
                center: { lng: 73.907953, lat: 15.402455 }
            }
        );


        const geofencing = platform.getGeofencingService();
        let router = platform.getRoutingService();
        router.calculateRoute(
            {
                mode: "fastest;car",
                representation: "display",
                routeattributes: "waypoints,shape",
                maneuverattributes: "direction,action",
                waypoint0: "15.399868166666666,73.81378916666667",
                waypoint1: "15.370534,73.927639"

            },
            result => {
                console.log(result);
                let array = [];
                array = result.response.route[0].shape;
                console.log(array.length);
                let fence = null
                let junctionCleared = false
                array.forEach(value => {
                    let temp = value;
                    let tempLatLng = temp.split(",")
                    let latlng = {
                        lat: tempLatLng[0],
                        lng: tempLatLng[1]
                    }
                    geofencing.request(H.service.extension.geofencing.Service.EntryPoint.SEARCH_PROXIMITY,
                        {
                            "apikey": 'uD6iDXLk6zPGnHxXg1t-XiieVFHvac2CWGixV8RdJdE',
                            'layer_ids': ["TRAFFIC_LIGHT_FENCES"],
                            'proximity': value,
                            'key_attributes': ['NAME']
                        },
                        result => {
                                                console.log("got result")

                            if (result.geometries.length > 0) {

                                if (fence == result.geometries[0].attributes.NAME) {
                                    // note : do nothing youre in the same fence
                                   //
                                }
                                else if (fence == null) {
                                    let startMarker = new H.map.Marker(latlng);
                                    map.addObject(startMarker);
                                    //entered a new fence
                                    console.log(result.geometries[0].attributes.NAME)
                                    console.log(`send start message at ${value}`)
                                    //+12024107229
                                    fence = result.geometries[0].attributes.NAME
                                }
                                else if (fence != result.geometries[0].attributes.NAME && fence != null) {
                                    let startMarker = new H.map.Marker(latlng);
                                    map.addObject(startMarker);
                                    console.log(`send end message at ${value}`)
                                    //sendMessage(`+91${tempObj[2]}`,tempObj[1])
                                    fence = result.geometries[0].attributes.NAME
                                    junctionCleared = true
                                }
                            }
                            else if (junctionCleared) {
                                console.log("fence = false")
                                fence = false
                            }
                        },
                        err => {
                            console.log(err)
                        })
                })

            },
            err => { })
    </script>

</body>

</html>