<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div id="map" style="width: 640px; height: 480px"></div>
    <input type="text" name="start" id="start">
    <input type="text" name="end" id="end">
    <input type="button" value="submit" id="submit">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-core.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-core-legacy.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service-legacy.js" type="text/javascript"
        charset="utf-8"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js" type="text/javascript" charset="utf-8"></script>
    <script src="https://js.hereapi.cn/v3/3.0/mapsjs-ui.js" type="text/javascript" charset="utf-8"></script>
    <link rel="stylesheet" type="text/css" href="https://js.hereapi.cn/v3/3.0/mapsjs-ui.css" />
    <script>
        $('#start').val('15.39585,73.81568')
        $('#end').val('15.373875,73.926369  ')


        const platform = new H.service.Platform({
            apikey: "IkU57xoI9YzZngVm137ZoxrhNh5H98EYVPxZhfAbvkU"
        })
        var maptypes = platform.createDefaultLayers();
        let map = new H.Map(
            document.getElementById("map"),
            maptypes.vector.normal.map,
            {
                zoom: 15,
                center: { lng: 73.907953, lat: 15.402455 }
            }
        );

        const geofencing = platform.getGeofencingService();
        let router = platform.getRoutingService();
        $('#submit').on('click', async () => {
             let start =  $('#start').val()
            let end = $('#end').val()
            console.log(start)
            console.log(end)
             router.calculateRoute(
                {
                    mode: "fastest;car",
                    representation: "display",
                    routeattributes: "waypoints,shape",
                    maneuverattributes: "direction,action",
                    waypoint0: start,
                    waypoint1: end

                },
                result => {
                    console.log(result);
                    let array = [];
                    array = result.response.route[0].shape;
                    console.log(array.length);
                    let fence = null
                    let junctionCleared = false
                    array.forEach(value => {
                        let temp = value;
                        let tempLatLng = temp.split(",")
                        let latlng = {
                            lat: tempLatLng[0],
                            lng: tempLatLng[1]
                        }
                        geofencing.request(H.service.extension.geofencing.Service.EntryPoint.SEARCH_PROXIMITY,
                            {
                                "apikey": 'uD6iDXLk6zPGnHxXg1t-XiieVFHvac2CWGixV8RdJdE',
                                'layer_ids': ["TRAFFIC_LIGHT_FENCES"],
                                'proximity': value,
                                'key_attributes': ['NAME']
                            },
                            result => {
                                console.log("got result")

                                if (result.geometries.length > 0) {

                                    if (fence == result.geometries[0].attributes.NAME) {
                                        // note : do nothing youre in the same fence
                                        console.log('same fence')
                                    }
                                    else if (fence == null) {
                                        let startMarker = new H.map.Marker(latlng);
                                        map.addObject(startMarker);
                                        //entered a new fence
                                        console.log(result.geometries[0].attributes.NAME)
                                        console.log(`send start message at ${value}`)
                                        //+12024107229
                                        fence = result.geometries[0].attributes.NAME
                                        junctionCleared = false

                                    }
                                    else if (fence != result.geometries[0].attributes.NAME && fence != null) {
                                        let endMarker = new H.map.Marker(latlng);
                                        map.addObject(endMarker);
                                        console.log(`send end message at ${value}`)
                                        //sendMessage(`+91${tempObj[2]}`,tempObj[1])
                                        fence = result.geometries[0].attributes.NAME
                                        junctionCleared = true
                                    }
                                }
                                else if (junctionCleared) {
                                    console.log("fence = false")
                                    fence = null
                                    junctionCleared = false
                                }
                            },
                            err => {
                                console.log(err)
                            })
                    })

                },
                err => { console.error(err) })

        })

    </script>

</body>

</html>